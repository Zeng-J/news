[{"/Users/zeng_j/Desktop/code/localCode/news/src/reportWebVitals.js":"1","/Users/zeng_j/Desktop/code/localCode/news/src/App.js":"2","/Users/zeng_j/Desktop/code/localCode/news/src/component/Comment.js":"3","/Users/zeng_j/Desktop/code/localCode/news/src/utils/request.js":"4","/Users/zeng_j/Desktop/code/localCode/news/src/utils/index.js":"5"},{"size":362,"mtime":1611022760131,"results":"6","hashOfConfig":"7"},{"size":2179,"mtime":1611042674770,"results":"8","hashOfConfig":"7"},{"size":3213,"mtime":1611042858494,"results":"9","hashOfConfig":"7"},{"size":984,"mtime":1611032674702,"results":"10","hashOfConfig":"7"},{"size":2304,"mtime":1611036101399,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fw3mm9",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/zeng_j/Desktop/code/localCode/news/src/reportWebVitals.js",[],"/Users/zeng_j/Desktop/code/localCode/news/src/App.js",[],"/Users/zeng_j/Desktop/code/localCode/news/src/component/Comment.js",["23"],"/Users/zeng_j/Desktop/code/localCode/news/src/utils/request.js",[],"/Users/zeng_j/Desktop/code/localCode/news/src/utils/index.js",["24"],"function formatDate(date, format) {\n  /**** utils.formatDate(value, \"YY-MM-DD hh:m:ss\") ****/\n\n  date = new Date(date);\n  let yy = date.getFullYear();\n  let mm = date.getMonth() + 1;\n  let dd = date.getDate();\n  let hh = date.getHours();\n  let m = date.getMinutes();\n  let ss = date.getSeconds();\n  let ms = date.getMilliseconds();\n  mm = mm < 10 ? \"0\" + mm : mm;\n  dd = dd < 10 ? \"0\" + dd : dd;\n  hh = hh < 10 ? '0' + hh : hh;\n  m = m < 10 ? '0' + m : m;\n  ss = ss < 10 ? '0' + ss : ss;\n  return format.toLowerCase()\n      .replace('yy', yy)\n      .replace('mm', mm)\n      .replace('dd', dd)\n      .replace('hh', hh)\n      .replace('m', m)\n      .replace('ss', ss)\n      .replace('ms', ms);\n};\n\nfunction dateDiff(timestamp) {\n  // 补全为13位\n  var arrTimestamp = (timestamp + '').split('');\n  for (var start = 0; start < 13; start++) {\n      if (!arrTimestamp[start]) {\n          arrTimestamp[start] = '0';\n      }\n  }\n  timestamp = arrTimestamp.join('') * 1;\n\n  var minute = 1000 * 60;\n  var hour = minute * 60;\n  var day = hour * 24;\n  var halfamonth = day * 15;\n  var month = day * 30;\n  var now = new Date().getTime();\n  var diffValue = now - timestamp;\n\n  // 如果本地时间反而小于变量时间\n  if (diffValue < 0) {\n      return '不久前';\n  }\n\n  // 计算差异时间的量级\n  var monthC = diffValue / month;\n  var weekC = diffValue / (7 * day);\n  var dayC = diffValue / day;\n  var hourC = diffValue / hour;\n  var minC = diffValue / minute;\n\n  // 数值补0方法\n  var zero = function (value) {\n      if (value < 10) {\n          return '0' + value;\n      }\n      return value;\n  };\n\n  if (monthC > 12) {\n      // 超过1年，直接显示年月日\n      return (function () {\n          var date = new Date(timestamp);\n          return date.getFullYear() + '年' + zero(date.getMonth() + 1) + '月' + zero(date.getDate()) + '日';\n      })();\n  } else if (monthC >= 1) {\n      return parseInt(monthC) + \"月前\";\n  } else if (weekC >= 1) {\n      return parseInt(weekC) + \"周前\";\n  } else if (dayC >= 1) {\n      return parseInt(dayC) + \"天前\";\n  } else if (hourC >= 1) {\n      return parseInt(hourC) + \"小时前\";\n  } else if (minC >= 1) {\n      return parseInt(minC) + \"分钟前\";\n  }\n  return '刚刚';\n};\n\nconst utils = {\n  formatDate,\n  dateDiff,\n}\n\nexport default utils;",{"ruleId":"25","severity":1,"message":"26","line":94,"column":21,"nodeType":"27","endLine":94,"endColumn":59},{"ruleId":"28","severity":1,"message":"29","line":40,"column":7,"nodeType":"30","messageId":"31","endLine":40,"endColumn":17},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'halfamonth' is assigned a value but never used.","Identifier","unusedVar"]